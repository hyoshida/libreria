dl
  dt
    | ASIN
  dd
    = link_to @book.asin, @book.detail_page_url
  dt
    | Title
  dd
    = @book.title
    small<
      = @book.binding
  dt
    | Auhtors
  dd
    = @book.authors.join(',')
  dt
    | Image
  dd
    = image_tag @book.medium_image_url if @book.medium_image_url
dl
  dt
    | State
  dd
    = @book.human_state_name
    span<
      - case @book.state.to_sym
      - when :wished
        = "(#{number_with_delimiter @book.wishes.count})"
  dt
    | Arrived at
  dd
    = l @book.arrived_at, format: :long if @book.arrived_at

- if @book.state?(:wished)
  - disabled = @book.wishes.by(current_user).exists?
  = button_to 'Wish', wish_namespace_book_path(@book, namespace_path: @namespace.path), method: :patch, class: 'btn btn-default', disabled: disabled

- if @book.state?(:ready)
  = button_to 'Loan', loan_namespace_book_path(@book, namespace_path: @namespace.path), method: :patch, class: 'btn btn-default'

/ TODO: Add conditions for the borrower
/ e.g. ... && @book.borrower == current_user
- if @book.state?(:onloan)
  = button_to 'Return', return_namespace_book_path(@book, namespace_path: @namespace.path), method: :patch, class: 'btn btn-default'

= link_to 'Edit', edit_book_path(@book)
'|
= link_to 'Back', books_path
